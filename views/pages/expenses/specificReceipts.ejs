<!DOCTYPE html>
<html>
<head>

  <title>Specific Receipts</title>

<style type="text/css">

body {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}

table {
  width: 100%;
}

th {
  text-align: left;
}

table, th, td {
    border: 1px solid black;
    border-collapse: collapse;
}

th, td {
    padding: 5px;
}

#pagination {
  display: flex;
  font-size: 25px;
  margin-top: 10px;
}

#pagination a {
  padding: 0px 5px 0px 5px;
  cursor: pointer;
}

#pagination a:hover {
  opacity: .6;
}

</style>
</head>
<body>

<table id="mainTable">

    <tr>
      <th>Id</th>
      <th>Location</th> 
      <th>Date</th>
      <th>Amount</th>
      <th>Expense Type</th>
    </tr>
  <% for(var i=0; i<receipts.length; i++) {%>
    <tr>
      <td><%= receipts[i].id %></td>
      <td><%= receipts[i].location %></td> 
      <td><%= receipts[i].date %></td>
      <td><%= receipts[i].amount %></td>
      <td><%= receipts[i].expense_type %></td>
    </tr>
  <% } %>

</table>

  <nav id="pagination">
    <div>Pages:</div>
  </nav>

<script>
  
  let table = document.getElementById('mainTable');
  let nav = document.getElementById('pagination');
  
  let rowsVisible = 24;
  let totalrows = table.rows.length;
  let numberOfPages = totalrows / rowsVisible;

  for (i = 0; i < numberOfPages; i++) {

    let pageNumber = i + 1;
    let createdLink = document.createElement('a');

    createdLink.rel = i;
    createdLink.innerHTML = pageNumber;

    nav.appendChild(createdLink);

  };

  Array.from(table.rows)
    .map(rows => {
      
      rows.style.display = 'none';

      return rows;

    })
    .slice(0, rowsVisible)
    .map(rows => {
    
      rows.style.display = 'table-row';

      return rows;

    });

  let navLinks = nav.childNodes;

  for (i = 0; i < navLinks.length; i++) {

    navLinks[i].addEventListener('click', navigate)

  };

  function navigate () {

    let currentPage = this.attributes['rel'].value;

    let startItem = currentPage * rowsVisible;

    let endItem = startItem + rowsVisible;

    Array.from(table.rows)
      .map(rows => {

        rows.style.display = 'none';

        return rows;

      })
      .slice(startItem, endItem)
      .map(rows => {

        rows.style.display = 'table-row';

        return rows;

      })

  };

</script>
</body>
</html>

