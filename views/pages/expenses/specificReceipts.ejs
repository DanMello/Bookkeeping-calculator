<!DOCTYPE html>
<html>
<head>

  <title>Specific Receipts</title>

  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.1/css/font-awesome.min.css" />

  <link href="../../../styles/print.css" media="print" rel="stylesheet" type="text/css">

<style type="text/css">

* {
  padding: 0px;
  margin: 0px;
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

#mainContainer {
  padding: 10px 10px 0px 10px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

table {
  width: 100%;
}

th {
  text-align: left;
}

table, th, td {
    border: 1px solid black;
    border-collapse: collapse;
}

th, td {
    padding: 5px;
}

#bottomContainer {
  display: flex;
  align-items: center;
  margin-top: 20px;
  margin-bottom: 20px;
  width: 100%;
  justify-content: space-around;
}

#pagination {
  display: flex;
  font-size: 25px;
  font-weight: bold; 
}

#pagination a {
  padding: 0px 5px 0px 5px;
  cursor: pointer;
  font-weight: normal;
}

#pagination a:hover {
  opacity: .6;
}

#sum {
  font-size: 18px;
}

.fa-print {
  cursor: pointer;
  font-size: 25px;
}

.hideTR {
  display: none;
}

.displayTR {
  display: table-row;
}

@keyframes spin {

    0% { 
      transform: rotate(0deg); 
    }
    100% { 
      transform: rotate(360deg); 
    }

}

</style>
</head>
<body>

<div id="mainContainer">

  <table id="mainTable">

    <thead>
      <th>Id</th> 
      <th>Location</th> 
      <th>Date</th>
      <th>Amount</th>
      <th>Expense Type</th>
    </thead>

    <tbody id="mainData">
      
    </tbody>

  </table>

  <div id="bottomContainer">

    <div><i id="print" class="fa fa-print" aria-hidden="true"></i></div>
    
    <nav id="pagination">
      <div>Pages:</div>
    </nav>

    <div id="sum"></div>

  </div>
  
</div>

<!-- This is quite interesting, if you render extra paths like /2017/lowes that are not in the folder views/, you need to add the amount of back spaces to the original page if that makes since lol to load the resource properly-->

<script src="../../../scripts/loader.js"></script>
<script src="../../../scripts/tablePagination.js"></script>
<script type="text/javascript">

  let dataAlreadyLoadedArray = [];
  let currentData = null;

  function getAndPostData(pageNumber) {

    let visibleRows = document.querySelectorAll('.displayTR')

    if (this.id === 'next') {

      var alreadyLoadedDataString = this.previousElementSibling['attributes'].rel.value;
      var dataAlreadyLoadedToNum = Number(alreadyLoadedDataString) + 1;

      currentData = dataAlreadyLoadedToNum;

    };

    return new Promise(function(resolve, reject) {

      let jsonBody = {
        calculation: Math.floor(window.innerHeight / 31) * 5,
        pageNumber: pageNumber || 1,
        dataAlreadyLoaded: dataAlreadyLoadedArray,
        currentData: currentData
      };

      fetch(window.location.href, {
        
        method: 'POST',
        body: JSON.stringify(jsonBody),
        headers: new Headers({
          "Accept": "application/json",
          "Content-Type": "application/json",
          "X-Requested-With": "XMLHttpRequest"
        }),
        credentials: 'include'

      }).then(results => {

        return results.json()

      }).then(postJsonResults => {

        if (postJsonResults.alreadyLoaded === true) {

          resolve('alreadyLoaded');

        } else {

          visibleRows.forEach(item => {

            item.classList.remove('displayTR');
            item.classList.add('hideTR');

          });

          loader();

          return fetch(window.location.href, {

            method: 'GET',
            headers: new Headers({
              "X-Requested-With": "XMLHttpRequest"
            }),
            credentials: 'include'

          })
          
        }

      }).then(results => {

        return results.json()

      }).then(getJsonResults => {

        let tbody = document.getElementById('mainData');
        let sum = document.getElementById('sum').innerHTML = 
          `Total for ${getJsonResults['location']}: $${getJsonResults['sum']}`;

        getJsonResults.receipts.forEach(row => {

          let tableRow = document.createElement('tr');
          let tableCells = ['id', 'location', 'date', 'amount', 'expense_type'];

          tableCells.forEach(cell => {

            let tableCell = document.createElement('td');

            if (cell === 'amount') tableCell.textContent = `$${row[cell]}`;
            else tableCell.textContent = row[cell];

            tableRow.appendChild(tableCell);

          });

          tbody.appendChild(tableRow);

        });

        resolve();

      }).catch(err => {

        reject(err);

      });

    }).then(resolved => {

      if (this === window) pagination.createFirstLinks();
      if (this.id === 'next') dataAlreadyLoadedArray.push(dataAlreadyLoadedToNum);
      if (resolved !== 'alreadyLoaded') done();

    }).catch(err => {

      console.log(err);

    });
  
  };

  getAndPostData();

</script>

<script type="text/javascript">

  let printButton = document.querySelector('#print').addEventListener('click', letsPrint)
  
  function letsPrint() {

    let table = document.getElementById('mainTable');

    Array.from(table.rows)
      .map(rows => {

        rows.style.display = 'table-row';

      })

    window.print();

  }

</script>

</body>
</html>

